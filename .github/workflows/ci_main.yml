name: CI Main

on:
  push:
  pull_request:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  # This job is used to detect duplicate runs and skip one of them
  # (For example when pushing a commit to an open pull request)
  # See: https://github.com/fkirc/skip-duplicate-actions?tab=readme-ov-file#skip-concurrent-workflow-runs
  pre_job:
    runs-on: ubuntu-22.04
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - name: Print event details
        run: |
          echo "This run was triggered by $GITHUB_EVENT_NAME event."
          cat $GITHUB_EVENT_PATH | jq .
      - name: Detect duplicate runs
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.1
        with:
          concurrent_skipping: "same_content_newer"
          skip_after_successful_duplicate: "true"
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Perform version check
        run: |
          ./scripts/check_version.sh

  # This job detects changes in the diff and set some ouput variables accordingly.
  # It is use to conditionaly run different jobs and steps of the pipeline
  filter-changes:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: read
    outputs:
      miscs: ${{ steps.filter.outputs.miscs }}
      common: ${{ steps.filter.outputs.common }}
      linux: ${{ steps.filter.outputs.linux }}
      windows: ${{ steps.filter.outputs.windows }}
      macos: ${{ steps.filter.outputs.macos }}
      python: ${{ steps.filter.outputs.python }}
      rust: ${{ steps.filter.outputs.rust }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Detect file changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          list-files: shell
          filters: |
            miscs:
              - '.github/workflows/**'
              - '.github/actions/**'
              - 'examples/simpleble/**'
              - 'cmake/**'
            common: &common
              - 'simpleble/include/**'
              - 'simpleble/src/builders/**'
              - 'simpleble/src/external/**'
              - 'simpleble/src/frontends/**'
              - 'simpleble/src/backends/common/**'
              - 'external/**'
            windows: &windows
              - *common
              - 'simpleble/src/backends/windows/**'
            linux: &linux
              - *common
              - 'simpleble/src/backends/linux/**'
              - 'simpledbus/**'
              - 'examples/simpledbus/**'
              - 'simplebluez/**'
              - 'examples/simplebluez/**'
            macos: &macos
              - *common
              - 'simpleble/src/backends/macos/**'
            python:
              - 'simpleble/src/backends/plain/**'
              - 'simpleble/src/frontends/**'
              - 'simplepyble/**'
              - 'setup.py'
              - 'MANIFEST.in'
            android:
              - 'simpleble/src/backends/common/**'
              - 'simpleble/src/backends/android/**'
              - 'simpleble/src/frontends/**'
              - 'simpledroidble/**'
            rust:
              - *linux
              - *macos
              - 'simplersble/**'
              - 'Cargo.lock'
              - 'Cargo.toml'
            docs:
              - 'docs/**'
              - '**/*.md'
              - '**/*.rst'

  # This job is used to dynamically generate the build matrix of 'build' job in 'ci_linux_internals.yml'.
  # The output variable 'values' is a list of strings: 'simpledbus', 'simplebluez'.
  # This is not inside pre-job because 'changes' variable is set by dorny/paths-filter to ALL the filters
  # that match, so we need to have a job with only these three filters.
  # Note that the filters are defined in a way that makes each of them depend on the previous one.
  # If in main branch, all libraries are listed in the output even if there are no matching changes.
  libraries:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: read
    outputs:
      values: ${{ github.ref == 'refs/heads/main' && '["simpledbus","simplebluez"]' || steps.filter.outputs.changes }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Detect file changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            simpledbus: &simpledbus
              - 'simpledbus/**'
            simplebluez: &simplebluez
              - *simpledbus
              - 'simplebluez/**'

  targets:
    needs: [pre_job, filter-changes, libraries]
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ubuntu-22.04
    outputs:
      lint: 'true'
      docs: >-
        ${{
          needs.filter-changes.outputs.docs == 'true' ||
          github.ref == 'refs/heads/main'
        }}
      windows: >-
        ${{
          needs.filter-changes.outputs.windows == 'true' ||
          needs.filter-changes.outputs.miscs == 'true' ||
          github.ref == 'refs/heads/main'
        }}
      linux: >-
        ${{
          needs.filter-changes.outputs.linux == 'true' ||
          needs.filter-changes.outputs.miscs == 'true' ||
          github.ref == 'refs/heads/main'
        }}
      macos: >-
        ${{
          needs.filter-changes.outputs.macos == 'true' ||
          needs.filter-changes.outputs.miscs == 'true' ||
          github.ref == 'refs/heads/main'
        }}
      python: >-
        ${{
          needs.filter-changes.outputs.python == 'true' ||
          github.ref == 'refs/heads/main'
        }}
      android: >-
        ${{
          needs.filter-changes.outputs.android == 'true' ||
          needs.filter-changes.outputs.miscs == 'true' ||
          github.ref == 'refs/heads/main'
        }}
      release-python: >-
        ${{
          (
            needs.filter-changes.outputs.python == 'true' ||
            needs.filter-changes.outputs.miscs == 'true' ||
            needs.filter-changes.outputs.windows == 'true' ||
            needs.filter-changes.outputs.linux == 'true' ||
            needs.filter-changes.outputs.macos == 'true'
          ) &&
          github.ref == 'refs/heads/main'
        }}
    steps:
      - run: echo "Generating list of required targets"

  lint:
    needs: [targets]
    if: needs.targets.outputs.lint == 'true'
    uses: ./.github/workflows/ci_lint.yml

  docs:
    needs: [targets]
    if: needs.targets.outputs.docs == 'true'
    uses: ./.github/workflows/ci_docs.yml

  smoketest:
    needs: [targets]
    uses: ./.github/workflows/ci_smoketest.yml

  simpleble:
    needs: [targets]
    uses: ./.github/workflows/ci_simpleble.yml

  simplepyble:
    needs: [targets]
    uses: ./.github/workflows/ci_simplepyble.yml

  simplejavable:
    needs: [smoketest]
    uses: ./.github/workflows/ci_simplejavable.yml

  simplecble:
    needs: [targets]
    uses: ./.github/workflows/ci_simplecble.yml

  simplersble:
    needs: [smoketest]
    uses: ./.github/workflows/ci_simplersble.yml

  linux-internals:
    needs: [smoketest]
    if: needs.targets.outputs.linux == 'true'
    uses: ./.github/workflows/ci_linux_internals.yml
    with:
      libraries: ${{ needs.libraries.outputs.values }}

  # python:
  #   needs: [smoketest]
  #   if: needs.targets.outputs.python == 'true'
  #   uses: ./.github/workflows/ci_python.yml
  #   secrets: inherit

  android:
    needs: [targets]
    if: needs.targets.outputs.android == 'true'
    uses: ./.github/workflows/ci_android.yml
    secrets: inherit

  release:
    needs: [smoketest, simpleble, simplepyble, simplejavable, simplecble, simplersble, android, linux-internals]
    runs-on: ubuntu-22.04
    steps:

      - name: "Download all artifacts"
        uses: actions/download-artifact@v4
        with:
          pattern: "*"
          path: artifacts
          merge-multiple: true

      - name: List all artifacts
        run: find artifacts -type f -ls

      - name: Remove unwanted artifacts
        run: |
          rm -rf artifacts/libsimplejavable*

      - name: Upload artifacts to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          file: artifacts/**/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true